//
// Generated file, do not edit! Created by nedtool 5.4 from ApplMessage.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __VEINS_APPLMESSAGE_M_H
#define __VEINS_APPLMESSAGE_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0504
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif

// cplusplus {{
#include "veins/base/utils/Coord.h"
#include "veins/modules/messages/BaseFrame1609_4_m.h"
#include "veins/base/utils/SimpleAddress.h"
// }}


namespace Veins {

/**
 * Class generated from <tt>ApplMessage.msg:33</tt> by nedtool.
 * <pre>
 * packet ApplMessage extends BaseFrame1609_4
 * {
 *     double speed;
 *     Coord direction;
 *     Coord location;
 *     double acceleration;
 *     LAddress::L2Type senderAddress = -1;
 * }
 * </pre>
 */
class ApplMessage : public ::Veins::BaseFrame1609_4
{
  protected:
    double speed;
    Coord direction;
    Coord location;
    double acceleration;
    LAddress::L2Type senderAddress;

  private:
    void copy(const ApplMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const ApplMessage&);

  public:
    ApplMessage(const char *name=nullptr, short kind=0);
    ApplMessage(const ApplMessage& other);
    virtual ~ApplMessage();
    ApplMessage& operator=(const ApplMessage& other);
    virtual ApplMessage *dup() const override {return new ApplMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual double getSpeed() const;
    virtual void setSpeed(double speed);
    virtual Coord& getDirection();
    virtual const Coord& getDirection() const {return const_cast<ApplMessage*>(this)->getDirection();}
    virtual void setDirection(const Coord& direction);
    virtual Coord& getLocation();
    virtual const Coord& getLocation() const {return const_cast<ApplMessage*>(this)->getLocation();}
    virtual void setLocation(const Coord& location);
    virtual double getAcceleration() const;
    virtual void setAcceleration(double acceleration);
    virtual LAddress::L2Type& getSenderAddress();
    virtual const LAddress::L2Type& getSenderAddress() const {return const_cast<ApplMessage*>(this)->getSenderAddress();}
    virtual void setSenderAddress(const LAddress::L2Type& senderAddress);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const ApplMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, ApplMessage& obj) {obj.parsimUnpack(b);}

} // namespace Veins

#endif // ifndef __VEINS_APPLMESSAGE_M_H

